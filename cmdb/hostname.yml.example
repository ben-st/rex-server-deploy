# system related configs
system:
  user: "foo" # the user you will use for daily operations and is provided with access to docker (Pull|Start|Stop|delete etc..)
  sshKey: "insert your ssh pub key here" # SSH Public key from your user that will be added to his authorized_keys file
  pw: "my-secret-pw" # user Password you should specify at least 8 character for security reasons
  email: foo@example.com
  baseDir: "/path/to/mount/for/data/files" # mount point to your docker media|log|config Files. All Data will live here. the specified user above will be granted access to this folder read/write.
  dh_length: 2048 # if you don't know what you are doing please use the default. The length for the dh keys the longer value you choose time increases exponentially

# specify the domain(s) your applications will use either sub domain or not
domain:
  cert:     "foo.example.com" # the domain which will appear in the SSL Cert first
  owncloud: "owncloud.example.com" # the domain for the docker Container owncloud

# settings for dockerized owncloud
owncloud:
  contName:   "owncloud" # the container will have this display name on docker ps
  imgName:    "owncloud" # the image name that will be pulled
  runParams:  "-p 127.0.0.1:9090:80 -v /opt/data/owncloud_data:/var/www/html"  # the params needed to start in correctly adjust if needed
  hostData:   "owncloud_data" # the place where your data will live
  contData:   "/var/www/html" # the place inside the container where the host mount will be mapped to
  localPort:  "9090" # local Port which the container binds to on the host, is needed for the nginx vhost

# settings for dockerized watchtower
watchtower:
  contName:   "watchtower"
  imgName:    "centurylink/watchtower"
  runParams:  "-v /var/run/docker.sock:/var/run/docker.sock"
