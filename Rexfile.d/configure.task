task "configure", group => "rootserver", sub {

  # load variables from cmdb
  my $sys_conf      = get cmdb "system";

  my $user          = $sys_conf->{user};
  my $pw            = $sys_conf->{pw};
  my $sshPubKey     = $sys_conf->{sshPubKey};
  my $baseDir       = $sys_conf->{baseDir};
  my $dh_length     = $sys_conf->{dh_length};

  my $sshDaemon     = "";
  my $fwDaemon      = "";
  my $nginxUser     = "";

  # get operating system string e.g ubuntu,debian,centos and convert to lower case
  my $os            = lc(get_operating_system());

  if(is_redhat) {
    # set correct fw and ssh variables
    $sshDaemon      = "sshd";
    $fwDaemon       = "firewalld";
    $nginxUser      = "nginx";

    }

  if(is_debian) {
    # set correct fw and ssh variables
    $sshDaemon      = "ssh";
    $fwDaemon       = "ufw";
    $nginxUser      = "www-data";
  }

  # disable password auth in ssh config
  #TODO configure Augeas if less code is needed
  Rex::Logger::info("Harden ssh -> forbid password authentication and allow root login only with ssh key");
  delete_lines_matching "/etc/ssh/sshd_config" => "PasswordAuthentication";
  delete_lines_matching "/etc/ssh/sshd_config" => "PermitRootLogin";
  append_if_no_such_line "/etc/ssh/sshd_config", "PasswordAuthentication no";
  append_if_no_such_line "/etc/ssh/sshd_config", "PermitRootLogin without-password";

  # restart ssh services
  Rex::Logger::info("restart the ssh service in order to reload sshd config");
  service $sshDaemon => "restart";

  Rex::Logger::info("start and enable docker");
  service docker => "start";
  run "systemctl enable docker";

  Rex::Logger::info("start and enable the firewall");
  service $fwDaemon => "start";
  run "systemctl enable $fwDaemon";

  if(is_redhat) {
    # set fw rules
    Rex::Logger::info("open Ports 80 and 443 in the firewall");
    # configure the firewall to allow http on port 80 besides port 433 for ssl
    run "firewall-cmd --permanent --add-service=http";
    run "firewall-cmd --permanent --add-service=https";
    run "firewall-cmd --reload";
    }

  if(is_debian) {
    # set fw rules
    #TODO configure internal ufw module if less code is needed
    Rex::Logger::info("configure ufw");
    run "ufw default deny incoming";
    run "ufw default allow outgoing";
    run "ufw allow 22/tcp";
    run "ufw allow 80/tcp";
    run "ufw allow 443/tcp";
    run "ufw --force enable";
  }

  Rex::Logger::info("start and enable haveged for entropy generation");
  service haveged => "start";
  run "systemctl enable haveged";

  Rex::Logger::info("add the nginx standard config");
  file "/etc/nginx/nginx.conf",
    content => template("files/nginx.conf.tpl", "nginxUser" => $nginxUser);

  Rex::Logger::info("add the nginx ssl config");
  file "/etc/nginx/ssl/ssl_cert.conf",
    content => template("files/ssl_cert.conf.tpl");



};
